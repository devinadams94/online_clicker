@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --foreground-rgb: 0, 0, 0;
  --background-start-rgb: 214, 219, 220;
  --background-end-rgb: 255, 255, 255;
}

@media (prefers-color-scheme: dark) {
  :root {
    --foreground-rgb: 255, 255, 255;
    --background-start-rgb: 0, 0, 0;
    --background-end-rgb: 0, 0, 0;
  }
}

body {
  color: rgb(var(--foreground-rgb));
  background: linear-gradient(
      to bottom,
      transparent,
      rgb(var(--background-end-rgb))
    )
    rgb(var(--background-start-rgb));
  min-height: 100vh;
}

@layer components {
  .btn {
    @apply px-4 py-2 rounded-md font-medium transition-colors duration-200;
  }
  
  .btn-primary {
    @apply btn bg-primary-600 text-white hover:bg-primary-700;
  }
  
  .btn-secondary {
    @apply btn bg-secondary-600 text-white hover:bg-secondary-700;
  }
  
  .card {
    @apply bg-white dark:bg-gray-800 rounded-lg shadow-md p-4;
  }
  
  .input {
    @apply w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500 text-green-600 dark:text-green-400;
  }
}

.bounce-click {
  transform-origin: center bottom;
  animation: bounce 0.3s ease;
}

@keyframes bounce {
  0%, 100% {
    transform: scale(1);
  }
  50% {
    transform: scale(0.95);
  }
}

/* Particle animations */
@keyframes fly-out {
  0% {
    transform: scale(1) translate(0, 0);
    opacity: 0.8;
  }
  100% {
    transform: scale(0) translate(var(--tx, 50px), var(--ty, -50px));
    opacity: 0;
  }
}

.animate-fly-out {
  animation: fly-out 0.6s ease-out forwards;
}

/* Ping animation */
@keyframes ping {
  0% {
    transform: scale(0.5);
    opacity: 0.5;
  }
  75%, 100% {
    transform: scale(1.5);
    opacity: 0;
  }
}

.animate-ping {
  animation: ping 0.3s cubic-bezier(0, 0, 0.2, 1);
}

/* Ping animation that only plays once */
@keyframes ping-once {
  0% {
    transform: scale(0.5);
    opacity: 0.5;
  }
  75%, 100% {
    transform: scale(1.5);
    opacity: 0;
  }
}

.animate-ping-once {
  animation: ping-once 0.8s cubic-bezier(0, 0, 0.2, 1) forwards;
}
